@page "/addProduct"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager navigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IViewCategoryUseCase ViewCategoryUseCase

<h3>Add Product</h3>
<br />
@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="category">Category</label>
            <select id="category" class="form-control" @bind="product.CategoryId">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.categoryId">@cat.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Cancel</button>
    </EditForm>
}
@code {
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        categories = ViewCategoryUseCase.Execute();
    }
    private void OnValidSubmit()
    {
        AddProductUseCase.Execute(product);
        navigationManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        navigationManager.NavigateTo("/products");
    }
}
